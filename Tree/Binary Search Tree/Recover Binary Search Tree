class Solution {
public:
    TreeNode *first=NULL;
    TreeNode *middle=NULL;
    TreeNode *last=NULL;
    TreeNode *prev;
    void inorder(TreeNode *root){
        if(root==NULL){
            return ;
        }
        inorder(root->left);
        if(prev!=NULL&&prev->val>root->val){
            if(first==NULL){
                first=prev;
                middle=root;
            }else{
                last=root;
            }
        }
        prev=root;
        inorder(root->right);
    }
    void recoverTree(TreeNode* root) {
        if(root==NULL){
            return ;
        }
        prev=new TreeNode(INT_MIN);
        inorder(root);
        if(first&&last){
            swap(first->val,last->val);
        }else if(first&&middle){
            swap(middle->val,first->val);
        }
    }
};

https://leetcode.com/problems/recover-binary-search-tree/
