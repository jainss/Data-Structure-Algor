/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
         vector<vector<int>>ans;
        if(root==NULL){
            return ans;
        }
     
      queue<TreeNode*>qu;
      qu.push(root);
      while(!qu.empty()){
          int siz=qu.size();
          vector<int>vec;
          for(int i=0;i<siz;i++){
              TreeNode* n=qu.front();
              qu.pop();
              if(n->left!=NULL){
                  qu.push(n->left);
              }if(n->right!=NULL){
                  qu.push(n->right);
              }
              vec.push_back(n->val);
          }
          ans.push_back(vec);
      }
      return ans;
    }
};


https://leetcode.com/problems/binary-tree-level-order-traversal/ 
