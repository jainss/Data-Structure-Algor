class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>>vec;
        if(root==NULL){
          return vec;
        }
        queue<TreeNode*>q;
        bool lefttoright=true;
        q.push(root);
        while(!q.empty()){
            int size=q.size();
            vector<int>ans(size);
            for(int i=0;i<size;i++){
                TreeNode* node=q.front();
                q.pop();
                int index=lefttoright?i:size-1-i;
                ans[index]=node->val;
                if(node->left){
                    q.push(node->left);
                }if(node->right){
                    q.push(node->right);
                }
            }
            lefttoright=!lefttoright;
            vec.push_back(ans);
        }
        return vec;
    }
};

https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/ 
