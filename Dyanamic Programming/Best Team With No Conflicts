class Solution {
public:
    int bestTeamScore(vector<int>& sc, vector<int>& ages) {
        int n=ages.size();
        vector<int>dp(n,0);
        vector<pair<int,int>>vp;
        for(int i=0;i<n;i++){
            vp.push_back({ages[i],sc[i]});
        }
        sort(vp.begin(),vp.end());
        int ans=0;
        for(int i=0;i<n;i++){
            dp[i]=vp[i].second;
           for(int j=0;j<i;j++){
               if(vp[j].second<=vp[i].second)
               dp[i]=max(dp[i],vp[i].second+dp[j]);
           }   
            ans=max(ans,dp[i]);
        }
        return ans;
    }
};


https://leetcode.com/problems/best-team-with-no-conflicts/
