class Solution {
public:
    bool subsetsum(vector<int>nums,int sum){
        int nu=nums.size();
        int dp[nu+1][sum+1];
        memset(dp,0,sizeof(dp));
        for(int i=0;i<nu+1;i++){
            for(int j=0;j<sum+1;j++){
                if(i==0&&j==0){
                    dp[i][j]=1;
                }else if(i==0){
                    dp[i][j]=0;
                }else if(j==0){
                    dp[i][j]=1;
                }else{
                    if(nums[i-1]<=j){
                        dp[i][j]=dp[i-1][j-nums[i-1]]||dp[i-1][j];
                    }else{
                        dp[i][j]=dp[i-1][j];
                    }
                }
            }
        }
        return dp[nu][sum];
    }
    bool canPartition(vector<int>& nums) {
        int sum=0;
        for(auto it:nums){
            sum+=it;
        }
        if(sum%2==0){
            return subsetsum(nums,sum/2);
        }else{
            return false;
        }
    }
};


URL: https://leetcode.com/problems/partition-equal-subset-sum/submissions/
