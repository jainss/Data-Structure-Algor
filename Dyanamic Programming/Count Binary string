Method -1  Dp )

#include<bits/stdc++.h>
using namespace std;

int main(){
    int n;
    cin>>n;
    int dp0[n+1];
    int dp1[n+1];
    dp0[0]=0;
    dp1[0]=0;
    dp0[1]=1;
    dp1[1]=1;
    for(int i=2;i<n+1;i++){
        dp1[i]=dp1[i-1]+dp0[i-1];
        dp0[i]=dp1[i-1];
    }
    cout<<dp1[n]+dp0[n]<<endl;
    return 0;
}


URL : https://www.pepcoding.com/resources/online-java-foundation/dynamic-programming-and-greedy/count-binary-strings-official/ojquestion


 
Method -2   Fibonacci )

class Solution{
public:
	// #define ll long long
	ll countStrings(int n) {
	    long long old1=1,old0=1;
	    for(int i=2;i<=n;i++){
	       long long  new1=old1+old0;
	      long long  new0=old1;
	       old1=new1%1000000007;
	       old0=new0%1000000007;
	    }
	    return (old1+old0)%1000000007;
	}
};


URL : https://practice.geeksforgeeks.org/problems/consecutive-1s-not-allowed1912/1#

