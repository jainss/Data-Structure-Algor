#include<bits/stdc++.h>
using namespace std;

vector<string> solve(int n){
	if(n==0){
		vector<string>vec;
		vec.push_back("");
		return vec;
	}
	else if(n<0){
		vector<string>vec;
		return vec;
	}
	vector<string>one=solve(n-1);
	vector<string>two=solve(n-2);
	vector<string>three=solve(n-3);
	vector<string>ans;
	for(string s:one){
		ans.push_back('1'+s);
	}
	for(string s:two){
		ans.push_back('2'+s);
	}
	for(string s:three){
		ans.push_back('3'+s);
	}
	return ans;
}

int main(){
	int n;
	cin>>n;
	vector<string>vec;
	vec=solve(n);
	cout<<"[";
	for(int i=0;i<vec.size()-1;i++){
		cout<<vec[i]<<","<<" ";
	}
	cout<<vec[vec.size()-1];
	cout<<"]";
}


//https://www.pepcoding.com/resources/online-java-foundation/recursion-with-arraylists/get-stair-paths-official/ojquestion#!
