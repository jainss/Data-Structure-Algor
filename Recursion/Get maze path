#include<bits/stdc++.h>
using namespace std;

// sr - source row
// sc - source column
// dr - destination row
// dc - destination column
vector <string> getMazePaths(int sr, int sc, int dr, int dc) {
    if(sr==dr&&sc==dc){
        vector<string>vec;
        vec.push_back("");
        return vec;
    }else if(sr>dr||sc>dc){
        vector<string>vec;
        return vec;
    }
    vector<string>v2=getMazePaths(sr,sc+1,dr,dc);
    vector<string>v1=getMazePaths(sr+1,sc,dr,dc);
    vector<string>path;
    for(auto it:v1){
        path.push_back('h'+it);
    }
    for(auto it:v2){
        path.push_back('v'+it);
    }
    return path;
}

void display(vector<string>& arr){
    cout << "[";
    for(int i = 0;i < arr.size();i++){
        cout << arr[i];
        if(i < arr.size() -1) cout << ", ";
    }
    cout << "]"<<endl;
}


int main() {
    int n,m; cin >> n >> m;
    vector<string> ans = getMazePaths(0,0,n-1,m-1);
    display(ans);
    return 0;
}

URL: https://www.pepcoding.com/resources/online-java-foundation/recursion-with-arraylists/get-maze-paths-official/ojquestion
