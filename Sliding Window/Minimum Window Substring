class Solution {
public:
    string minWindow(string s, string t) {
        if(t.size()>s.size()){
            return "";
        }
        if(s==t){
            return s;
        }
        int st=-1,en=-1,i=0,j=0,ans=INT_MAX,count=0;
        unordered_map<char,int>mp;
        for(auto it:t){
            mp[it]++;
        }
        count=mp.size();
        while(j<s.size()){
            if(mp.find(s[j])!=mp.end()){
                mp[s[j]]--;
                if(mp[s[j]]==0){
                    count--;
                }
            }
                if(count==0){
                    if((j-i+1)<ans){
                     ans=j-i+1;
                     st=i;
                     en=j;
                    }
                while(count==0){
                    if (mp.find(s[i]) != mp.end())
				    {
                    if(mp[s[i]]<=0){
                        mp[s[i]]++;
                        if(mp[s[i]]>0){
                            count++;
                        }
                    }
                    }
                    i++;
                    if((j-i+1)<ans and count==0){
                        ans=j-i+1;
                        st=i;
                        en=j;
                    }
                }
                }
            j++;
        }
        string str="";
        if(st==-1 and en==-1){
            return str;
        }
        for(int k=st;k<=en;k++){
            str+=s[k];
        }
        return str;
    }
};



https://leetcode.com/problems/minimum-window-substring/ 
