TC : O(N)
SC : O(1)


class Solution {
public:
    int numberOfAlternatingGroups(vector<int>& colors, int k) {
        int n = colors.size(), i =0, count =0;
        int limit = n + k -1;
        while(i<n){
           int r = i+1;
           while(r<limit and colors[(r-1)%n]!=colors[r%n]){
            r++;
           }
           if(r-i >= k){
             count += (r-i)- k +1;
           }
           i = r;
        }
        return count;
    }
};


https://leetcode.com/problems/alternating-groups-ii/description/?envType=daily-question&envId=2025-03-09
