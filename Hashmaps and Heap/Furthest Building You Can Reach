class Solution {
public:
    int furthestBuilding(vector<int>& heights, int bricks, int ladders) {
        priority_queue<int>pq;
        int i;
        for(int i=0;i<heights.size()-1;i++){
            int diff=heights[i+1]-heights[i];
            if(diff<=0){
                continue;
            }else{
                if(bricks>=diff){
                    bricks-=diff;
                    pq.push(diff);
                }else if(ladders>0){
                    if(pq.size()>0){
                        int d=pq.top();
                    if(d>=diff){
                        pq.pop();
                        bricks+=d;
                        bricks-=diff;
                        pq.push(diff);
                    }
                    }
                    ladders--;
                }else{
                    return i;
                }
            }
        }
        return i;
    }
};
