vector<int> Solution::solve(vector<int> &A, vector<int> &B, int C) {
    sort(A.begin(),A.end());
    sort(B.begin(),B.end());
    int n=A.size();
    priority_queue<pair<int,pair<int,int>>>pq;
    set<pair<int,int>>st;
    vector<int>ans;
    pq.push({A[n-1]+B[n-1],{n-1,n-1}});
    st.insert({n-1,n-1});
    while(ans.size()!=C){
        int val=pq.top().first;
        int i=pq.top().second.first;
        int j=pq.top().second.second;
        ans.push_back(val);
        pq.pop();
        if(i>0 and st.count({i-1,j})==0){
            pq.push({A[i-1]+B[j],{i-1,j}});
            st.insert({i-1,j});
        }
        if(j>0 and st.count({i,j-1})==0){
            pq.push({A[i]+B[j-1],{i,j-1}});
            st.insert({i,j-1});
        }
    }
    return ans;
}




https://www.interviewbit.com/problems/maximum-sum-combinations/
