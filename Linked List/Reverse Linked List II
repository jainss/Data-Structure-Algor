/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        if(head==NULL||head->next==NULL){
            return head;
        }
        
        ListNode *dummy=new ListNode(-1);
        dummy->next=head;
        ListNode *it=dummy;
        ListNode *previt=NULL;
        for(int i=0;i<left;i++){
             previt=it;
            it=it->next;
        }
        ListNode *curR=it;
        ListNode *prevR=previt;
        ListNode *forward=NULL;
        for(int i=left;i<=right;i++){
            forward=curR->next;
            curR->next=prevR;
            prevR=curR;
            curR=forward;
        }
        
        previt->next=prevR;
        it->next=curR;
        return dummy->next;
    }
};
