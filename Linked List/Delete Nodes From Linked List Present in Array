TC : O(N)
SC : O(N)

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* modifiedList(vector<int>& nums, ListNode* head) {
        set<int>st(nums.begin(), nums.end());
        while(head and st.count(head->val)){
            head = head->next;
        }
        ListNode* curr = head;
        while(curr && curr->next){
            while(curr->next && st.count(curr->next->val)){
                curr->next = curr->next->next;
            }
            curr = curr->next;
        }
        return head;
    }
};


https://leetcode.com/problems/delete-nodes-from-linked-list-present-in-array/description/?envType=daily-question&envId=2025-11-01
