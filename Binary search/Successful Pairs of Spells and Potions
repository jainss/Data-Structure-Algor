class Solution {
public:
    vector<int> successfulPairs(vector<int>& s, vector<int>& p, long long success) {
        sort(p.begin(),p.end());
        vector<int>ans;
        int n=p.size();
        for(int i=0;i<s.size();i++){
            long long int sum=0;
            long long int val=s[i];
            if((p[0]*val)>=success){
                sum+=n;

            }else{
                                // cout<<"hi";
                long long int j=0,k=n-1;
                while(j<=k){
                    int mid=(j+k)/2;
                    if(p[mid]*val>=success and p[mid-1]*val<success){
                        sum+=n-mid;
                        break;
                    }else if(p[mid]*val<success){
                        j=mid+1;
                    }else{
                        k=mid-1;
                    }
                }
            }
            ans.push_back(sum);
        }
        return ans;
    }
};


https://leetcode.com/problems/successful-pairs-of-spells-and-potions/
