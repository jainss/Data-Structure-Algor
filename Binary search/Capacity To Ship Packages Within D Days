class Solution {
public:
    bool isvalid(int mid,vector<int>& nums,int m){
        int subnum=1;
        int pages=0;
        for(int i=0;i<nums.size();i++){
            if(nums[i]>mid){
                return false;
            }
            if(pages+nums[i]>mid){
                subnum++;
                pages=nums[i];
            }else{
                pages+=nums[i];
            }
        }
        if(subnum>m){
            return false;
        }
        return true;
    }
    int shipWithinDays(vector<int>& nums, int m) {
        int low=INT_MAX;
        for(auto it:nums){
            low=min(low,it);
        }
       int high=accumulate(nums.begin(),nums.end(),0);
       int res=-1;
       while(low<=high){
           int mid=(low+high)/2;
           if(isvalid(mid,nums,m)){
               res=mid;
               high=mid-1;
           }else{
               low=mid+1;
           }
       }
       return res;
    }
};

https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/
