class Solution {
public:
    bool solve(vector<int>& q,int n,int mid){
        int c=0;
        for(auto it:q){
           c+=it/mid;
          if(it%mid>0){
              c++;
          }
        }
        if(c>n){
            return false;
        }
        else{
            return true;
        }
    }
    int minimizedMaximum(int n, vector<int>& q) {
        int sum=0;
        sum=*max_element(q.begin(),q.end());
        int l=1,r=sum,ans=INT_MAX;
        while(l<=r){
            int mid=l+(r-l)/2;
            if(solve(q,n,mid)==true){
                ans=min(ans,mid);
                r=mid-1; 
            }else{
                l=mid+1;
            }
        }
        return ans;
    }
};



https://leetcode.com/problems/minimized-maximum-of-products-distributed-to-any-store/
