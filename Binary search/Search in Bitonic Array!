int Solution::solve(vector<int> &A, int B) {
    int n=A.size();
    int l=0,r=n-1,idx=-1;
    while(l<=r){
        int mid=l+(r-l)/2;
        if(A[mid]==B){
            return mid;
        }
        if(A[mid]>A[mid-1] and A[mid]>A[mid+1]){
            idx=mid;
            break;
        }
        else if(A[mid]<A[mid-1]){
            r=mid-1;
        }else if(A[mid]<A[mid+1]){
            l=mid+1;
        }
    }
    // cout<<idx<<endl;
    int i=0,j=idx;
    while(i<=j){
        int mid=i+(j-i)/2;
        if(A[mid]==B){
            return mid;
        }
        if(A[mid]>B){
            j=mid-1;
        }else{
            i=mid+1;
        }
    }
    i=idx+1;
    j=n-1;
    while(i<=j){
        int mid=i+(j-i)/2;
        if(A[mid]==B){
            return mid;
        }
        if(A[mid]>B){
            i=mid+1;
        }else{
            j=mid-1;
        }
    }
    return -1;
}






https://www.interviewbit.com/problems/search-in-bitonic-array/
