class Solution {
public:
    
    bool isvalid(vector<vector<char>>&ans,int i,int j,char v){
     for(int m=0;m<9;m++){
         if(ans[i][m]==v){
             return false;
         }
     }
     for(int m=0;m<9;m++){
         if(ans[m][j]==v){
             return false;
         }
     }
     int ni=3*(i/3);
     int nj=3*(j/3);
     for(int m=0;m<3;m++){
         for(int n=0;n<3;n++){
             if(ans[ni+m][nj+n]==v){
                 return false;
             }
         }
     }
     return true;
    }
    
    void solve(vector<vector<char>>&board,vector<vector<char>>ans,int i,int j){
    if(i==board.size()){
        board=ans;
        return ;
    }
    int ni=0,nj=0;
    if(j==board[0].size()-1){
        ni=i+1;
        nj=0;
    }
    else{
        ni=i;
        nj=j+1;
    }
    if(ans[i][j]!='.'){
        solve(board,ans,ni,nj);
    }
    else{
        for(char p='1';p<='9';p++){
           if(isvalid(ans,i,j,p)){
               ans[i][j]=p;
               solve(board,ans,ni,nj);
               ans[i][j]='.';
           }
        }
    }
    }
    
    void solveSudoku(vector<vector<char>>& board) {
        vector<vector<char>>ans=board;
        solve(board,ans,0,0);
        return ;
    }
};
