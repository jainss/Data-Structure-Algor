/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head)
    {
        if(head==NULL or head->next==NULL)
            return NULL;
        
        ListNode* slow=head;
        ListNode* fast=head;
        slow=slow->next;
        fast=fast->next->next;
        while(fast!=NULL and fast->next!=NULL)
        {
            if(slow==fast)
                break;
            slow=slow->next;
            fast=fast->next->next;
            
        }
        if(slow!=fast)
            return NULL;
        slow=head;
        while(slow!=fast)
        {
            slow=slow->next;
            fast=fast->next;
        }
        return slow;
        
    }
};
