/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int res=0;
    pair<int,int> solve(TreeNode *root){
        if(root==NULL){
            return {0,0};
        }
        pair<int,int> sumal=solve(root->left);
        pair<int,int> sumar=solve(root->right);
        int sum=(sumal.first+sumar.first)+root->val;
        int n=sumal.second+sumar.second+1;
        if(sum/n==root->val){
            res++;
        }
        return {sum,n};
    }
    int averageOfSubtree(TreeNode* root) {
        solve(root);
        return res;
    }
};

https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree/
