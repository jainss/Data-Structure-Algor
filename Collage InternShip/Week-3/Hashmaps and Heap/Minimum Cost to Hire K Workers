class Solution {
public:
    double mincostToHireWorkers(vector<int>& quality, vector<int>& wage, int k) {
        vector<pair<double,int>>vec;
        int n=wage.size();
        for(int i=0;i<n;i++){
            vec.push_back({(double)wage[i]/(double)quality[i],quality[i]});
        }
        double sumq=0,minwage=INT_MAX;
        priority_queue<int>pq;
        sort(vec.begin(),vec.end());
        for(auto it:vec){
            pq.push(it.second);
            sumq+=it.second;
            if(pq.size()>k){
                sumq-=pq.top();
                pq.pop();
            }
            if(pq.size()==k){
                minwage=min(minwage,sumq*it.first);
            }
        }
        return minwage;
    }
};

https://leetcode.com/problems/minimum-cost-to-hire-k-workers/ 
