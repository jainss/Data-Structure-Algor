class Solution {
public:
    
   static bool cmp(pair<int,int> v1,pair<int,int> v2){
      if(v1.second!=v2.second){
          return v1.second>v2.second;
      }
       return v1.first<v2.first;
    }
    
    int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {
        vector<pair<int,int>>vec;
        for(int i=0;i<n;i++){
            vec.push_back({speed[i],efficiency[i]});
        }
        sort(vec.begin(),vec.end(),cmp);
         priority_queue<int, vector<int>,greater<int> >pq;
      long long int c=0,ans=0,mod=1000000007;
       for(auto it:vec){
           int sp=it.first;
           int ef=it.second;
           if(pq.size()==k){
               c-=pq.top();
               pq.pop();
           }
           pq.push(sp);
           c+=sp;
           ans=max(ans,c*ef);
       }
        return ans%mod;
    }
};
