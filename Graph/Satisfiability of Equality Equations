class Solution {
public:
    vector<int>par;
    vector<int>rank;
    int find(int node){
        if(node==par[node]){
            return node;
        }
        return par[node]=find(par[node]);
    }
    void unionrank(int u,int v){
        u=find(u);
        v=find(v);
        if(rank[u]>rank[v]){
            par[v]=u;
        }else if(rank[v]>rank[u]){
            par[u]=v;
        }else{
            par[u]=v;
            rank[v]++;
        }
    }
    bool equationsPossible(vector<string>& equations) { 
        vector<string>s1;
        vector<string>s2;
        for(auto it:equations){
            if(it[1]==it[2]){
                s1.push_back(it);
            }else{
                s2.push_back(it);
            }
        }
        for(auto it:s2){
            s1.push_back(it);
        }
        equations=s1;
        par.resize(26);
        for(int i=0;i<26;i++){
            par[i]=i;
        }
        rank.resize(26,0);
        for(auto it:equations){
            if(it[1]=='!'){
                if(find(it[0]-'a')==find(it[3]-'a')){
                    return false;
                }
            }else{
                if(find(it[0]-'a')==find(it[3]-'a')){
                    continue;
                }else{
                    unionrank(it[0]-'a',it[3]-'a');
                }
            }
        }
        return true;
    }
};

https://leetcode.com/problems/satisfiability-of-equality-equations/
