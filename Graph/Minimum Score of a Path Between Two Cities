class Solution {
public:
    int minScore(int n, vector<vector<int>>& roads) {
        int ans = INT_MAX; 
        vector<vector<pair<int, int>>> adj(n+1);
        for(auto it: roads){
            adj[it[0]].push_back({it[1], it[2]});
            adj[it[1]].push_back({it[0], it[2]});
        }
        vector<int> vis(n+1, 0);
        queue<int> qu;
        qu.push(1); 
        vis[1] = 1;    
        while(!qu.empty()){
            auto node = qu.front();
            qu.pop();
            for(auto i: adj[node]){
                ans = min(ans, i.second);   
                if(vis[i.first] != 1){
                    vis[i.first] = 1;
                    qu.push(i.first);
                }
            }
        }
        return ans;
    }
};




https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities/
