class Solution {
public:
    
    void dfs(vector<vector<int>>& grid,int i,int j){
       if(i<0 || i>grid.size()-1 || j<0 || j>grid[0].size()-1)
            return;  
       if(grid[i][j]==1){
           grid[i][j]=2;
           dfs(grid,i+1,j);
           dfs(grid,i,j+1);
           dfs(grid,i-1,j);
           dfs(grid,i,j-1);
       }
    }
    
    int numEnclaves(vector<vector<int>>& grid) {
        int n=grid.size(),m=grid[0].size();
        if(n<=1 ||m<=1){
            return 0;
        }
        for(int i=0;i<n;i++){
            dfs(grid,i,0);
            dfs(grid,i,m-1);
        }
        for(int i=0;i<m;i++){
            dfs(grid,0,i);
            dfs(grid,n-1,i);
        }
        int ans=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1){
                    ans++;
                }
            }
        }
        return ans;
    }
};

https://leetcode.com/problems/number-of-enclaves/
