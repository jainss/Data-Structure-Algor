TC: O(1)
SC: O(

class Bank {
public:
    vector<long long>acc_balance;
    bool valid(int acc){
        return acc>0 and acc<=acc_balance.size();
    }

    Bank(vector<long long>& balance) {
        acc_balance=balance;
    }
    
    bool transfer(int account1, int account2, long long money) {
        if(!valid(account1) || !valid(account2) || acc_balance[account1-1]<money){
            return false;
        }
        acc_balance[account2-1]+=money;
        acc_balance[account1-1]-=money;
        return true;
    }
    
    bool deposit(int account, long long money) {
        if(!valid(account)){
            return false;
        }
        acc_balance[account-1]+=money;
        return true;
    }
    
    bool withdraw(int account, long long money) {
        if(!valid(account) || acc_balance[account-1]< money){
            return false;
        }
        acc_balance[account-1]-=money;
        return true;
    }
};

/**
 * Your Bank object will be instantiated and called as such:
 * Bank* obj = new Bank(balance);
 * bool param_1 = obj->transfer(account1,account2,money);
 * bool param_2 = obj->deposit(account,money);
 * bool param_3 = obj->withdraw(account,money);
 */


https://leetcode.com/problems/simple-bank-system/description/?envType=daily-question&envId=2025-10-26
