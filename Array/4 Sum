class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
         vector<vector<int>> v;
        int n= nums.size();
        if(n<4)
            return {};
        sort(nums.begin(), nums.end());
        for(int i=0;i<n-3;i++){
            if(i>0 and nums[i]==nums[i-1]){
                continue;
            }
            for(int j=i+1;j<n-2;j++){
                if(j>i+1 and nums[j]==nums[j-1]){
                    continue;
                }
                int req= target - (nums[i]+nums[j]);
                int l=j+1, r=n-1;
                while(l<r){
                    if(nums[l]+nums[r] == req){
                        v.push_back({nums[i], nums[j], nums[l++], nums[r--]});
                        while(l<r and nums[l]==nums[l-1]){
                            l++;
                        }
                        while(l<r and nums[r]==nums[r+1]){
                            r--;
                        }
                    }
                    else if(nums[l]+nums[r] < req){
                        l++;
                    }
                    else{
                        r--;
                    }
                }
            }
        }
        return v;
    }
};
https://leetcode.com/problems/4sum/
