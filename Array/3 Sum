class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>>ans;
        if(nums.size()<3){
            return ans;
        }
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size()-2;i++){
            if(i==0||(i>0&&nums[i]!=nums[i-1])){
                int sum=0-nums[i];
                int k=i+1,j=nums.size()-1;
                while(k<j){
                    if(nums[k]+nums[j]<sum){
                        k++;
                    }
                    else if(nums[k]+nums[j]>sum){
                        j--;
                    }else{
                        vector<int>vec;
                        vec.push_back(nums[i]);
                        vec.push_back(nums[k]);
                        vec.push_back(nums[j]);
                        ans.push_back(vec);
                        while(k<j && nums[k]==nums[k+1]){
                            k++;
                        }
                        while(k<j && nums[j]==nums[j-1]){
                            j--;
                        }
                        k++;
                        j--;
                    }
                }
            }
        }
        return ans;
    }
};

https://leetcode.com/problems/3sum/submissions/
