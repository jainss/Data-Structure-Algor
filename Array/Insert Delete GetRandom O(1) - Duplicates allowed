class RandomizedCollection {
public:
    vector<int>vec;
     unordered_map<int,unordered_set<int>>mp;
    RandomizedCollection() {
    }
    
    bool insert(int val) {
        bool flag=true;
        if(mp.find(val)!=mp.end()){
            flag=false;
        }
         vec.push_back(val);
        mp[val].insert(vec.size()-1);
        return flag;
    }
    
    bool remove(int val) {
        if(mp.find(val)==mp.end()){
            return false; 
        }
        int idx=*(mp[val].begin());
        mp[val].erase(mp[val].begin());
        int temp=vec.back();
        vec[idx]=temp;
        mp[temp].insert(idx);
        mp[temp].erase(vec.size()-1);
        vec.pop_back();
        if(mp[val].size()==0){
            mp.erase(val);
        }
        return true;
    }
    
    int getRandom() {
        return vec[rand()%vec.size()];
    }
};

/**
 * Your RandomizedCollection object will be instantiated and called as such:
 * RandomizedCollection* obj = new RandomizedCollection();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
 
 
 
 https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed/
