## PEPCODING solution 
# LINK: https://www.pepcoding.com/resources/online-java-foundation/2d-arrays/search-in-a-sorted-2d-array-official/ojquestion

#include<bits/stdc++.h>
using namespace std;

int main(){
    int n;
    cin>>n;
    vector<vector<int>>vec;
    for(int i=0;i<n;i++){
        vector<int>v1;
        for(int j=0;j<n;j++){
            int c;
            cin>>c;
            v1.push_back(c);
        }
        vec.push_back(v1);
    }
    int x;
    cin>>x;
    int i=0;
    int j=vec.size()-1;
    while(i<vec.size()&&j>=0){
        if(x==vec[i][j]){
            cout<<i<<endl<<j;
            return 0;
        }
        if(x>vec[i][j]){
            i++;
        }
        else if(vec[i][j]>x){
            j--;
        }
    }
    cout<<"Not Found"<<endl;
    return 0;
}


## LETCODE SOLUTION 
# LINK :  https://leetcode.com/problems/search-a-2d-matrix-ii/

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int i=0;
        int j=matrix[0].size()-1;
        while(i<matrix.size()&&j>=0){
            if(target==matrix[i][j]){
                return true;
            }
            if(matrix[i][j]>target){
                j--;
            }
            else if(matrix[i][j]<target){
               i++;
            }
        }
        return false;
    }
};
