class Solution {
public:
    int get_result(vector<vector<int>>&matrix,int i,int j){
    
    int count=0;
    
    int m=matrix.size();
    int n=matrix[0].size();
    
    int dx[8]={1,1,0,-1,-1,-1,0,1};
    int dy[8]={0,-1,-1,-1,0,1,1,1};
    
    for(int k=0;k<8;k++){
        
        int x=i+dx[k];
        int y=j+dy[k];
        
        if(x>=0 && x<m && y>=0 && y<n && (matrix[x][y]==1 || matrix[x][y]==-1)){
            count++;
        }
        
    }
    
    return count;
    
}

void gameOfLife(vector<vector<int>>&matrix) {
    
    int m=matrix.size();
    int n=matrix[0].size();
    
   
    
    for(int i=0;i<m;i++){
        
        for(int j=0;j<n;j++){
            
            if(matrix[i][j]==0){
                
                int count=get_result(matrix,i,j);
                
                if(count==3){
                    matrix[i][j]=2;
                }
                
                else{
                    matrix[i][j]=0;
                }
                
            }
            
            else{
                
                int count=get_result(matrix,i,j);
                
                if(count<2){
                   matrix[i][j]=-1;
                }
                
                else if(count==2 || count==3){
                    matrix[i][j]=1;
                }
                
                else{
                    matrix[i][j]=-1;
                }
                
            }
           
        }
    }
    
  
    for(int i=0;i<m;i++){
        
        for(int j=0;j<n;j++){
            
            if(matrix[i][j]==-1){
                matrix[i][j]=0;
            }
            
            if(matrix[i][j]==2){
                matrix[i][j]=1;
            }
            
        }
    }
    
}
};

https://leetcode.com/problems/game-of-life/
